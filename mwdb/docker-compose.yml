version: "3.3"

services:

  mwdb:
    image: certpl/mwdb:v2.10.2
    depends_on:
      - postgres
      - redis
    restart: on-failure
    env_file:
      - mwdb-vars.env
    environment:
      - MWDB_BASE_URL=http://127.0.0.1
      - MWDB_REDIS_URI=redis://redis/
      - MWDB_STORAGE_PROVIDER=s3
      - MWDB_HASH_PATHING=0
      - MWDB_S3_STORAGE_ENDPOINT=minio:9000
      - MWDB_S3_STORAGE_BUCKET_NAME=mwdb
      - MWDB_ENABLE_KARTON=1
      - MWDB_ENABLE_REGISTRATION=0
      - MWDB_ENABLE_RATE_LIMIT=1
    volumes:
      - ./mwdb-uploads:/app/uploads
      - ./karton.docker.ini:/etc/karton/karton.ini

  mwdb-web:
    image: certpl/mwdb-web:v2.10.2
    ports:
      - "8888:80"
    depends_on:
      - mwdb
    restart: on-failure

  minio:
    image: minio/minio
    entrypoint: sh
    command: -c "mkdir -p /data/mwdb && minio server --address 0.0.0.0:9000 --console-address :8070 /data"
    env_file:
      - minio-vars.env
    volumes:
      - ./minio-samples:/data
    restart: unless-stopped

  postgres:
    image: postgres
    restart: always
    env_file:
      - postgres-vars.env
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:alpine

  karton-system:
    image: certpl/karton-system:v5.2.0
    depends_on:
      - redis
    volumes:
      - ./karton.docker.ini:/etc/karton/karton.ini
    entrypoint: karton-system
    command: --setup-bucket
    restart: unless-stopped

  karton-dashboard:
    image: certpl/karton-dashboard:v1.5.0
    depends_on:
      - redis
    volumes:
      - ./karton.docker.ini:/etc/karton/karton.ini
    ports:
      - "8030:5000"
    restart: unless-stopped

  karton-classifier:
    image: certpl/karton-classifier:v2.0.0
    volumes:
      - ./karton.docker.ini:/etc/karton/karton.ini
    restart: unless-stopped

  karton-mwdb-reporter:
    image: certpl/karton-mwdb-reporter:v1.3.0
    volumes:
      - ./karton.docker.ini:/etc/karton/karton.ini
    restart: unless-stopped

  karton-strings:
    build:
      context: .
      dockerfile: ./karton/strings/Dockerfile
    volumes:
      - ./karton.docker.ini:/etc/karton/karton.ini
    restart: unless-stopped

  #karton-confext-njrat-dnlib:
  #  build:
  #    context: .
  #    dockerfile: ./karton/confext-njrat-dnlib/Dockerfile
  #  volumes:
  #    - ./karton.docker.ini:/etc/karton/karton.ini
  #  restart: unless-stopped
